{% block header %}
    {{ include('adminHeader.html.twig') }}
{% endblock %}
{% block body %}
    <link rel="stylesheet" href="{{ asset('css/userList.css') }}" />
    <div id="grad">
    <p class="www">User list</p>
    <table id="grid">
        <input placeholder=" Filter" class="filter" name="filter" onkeyup="filter(this, 'grid')" style="width:350px;" type="text" />
        <thead>
            <tr>
                <th data-type="number">Id</th>
                <th data-type="string">Username</th>
                <th data-type="string">Password</th>
                <th data-type="string">Email</th>
            </tr>
        </thead>
        <tbody>
        {% for user in users %}
            <tr>
                <td><a class="id" href="{{ path('adminUserList_show', { 'id': user.id }) }}">{{ user.id }}</a></td>
                <td>{{ user.username }}</td>
                <td>{{ user.password }}</td>
                <td>{{ user.email }}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>
    <script>
        var grid = document.getElementById('grid');

        grid.onclick = function(e) {
            if (e.target.tagName != 'TH') return;
            sortGrid(e.target.cellIndex, e.target.getAttribute('data-type'));
        };

        function sortGrid(colNum, type) {
            var tbody = grid.getElementsByTagName('tbody')[0];

            var rowsArray = [].slice.call(tbody.rows);

            var compare;

            switch (type) {
                case 'number':
                    compare = function(rowA, rowB) {
                        return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML;
                    };
                    break;
                case 'string':
                    compare = function(rowA, rowB) {
                        return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML;
                    };
                    break;
            }

            rowsArray.sort(compare);
            grid.removeChild(tbody);

            for (var i = 0; i < rowsArray.length; i++) {
                tbody.appendChild(rowsArray[i]);
            }

            grid.appendChild(tbody);
        }

        function filter (phrase, _id){
            var words = phrase.value.toLowerCase().split(" ");
            var table = document.getElementById(_id);
            var ele;
            for (var r = 1; r < table.rows.length; r++){
                ele = table.rows[r].innerHTML.replace(/<[^>]+>/g,"");
                var displayStyle = 'none';
                for (var i = 0; i < words.length; i++) {
                    if (ele.toLowerCase().indexOf(words[i])>=0)
                        displayStyle = '';
                    else {
                        displayStyle = 'none';
                        break;
                    }
                }
                table.rows[r].style.display = displayStyle;
            }
        }
    </script>
{% endblock %}
{% block footer %}
    {{ include('footer.html.twig') }}
{% endblock %}
